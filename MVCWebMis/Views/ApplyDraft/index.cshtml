@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "我的草稿";
}

@*脚本引用放在此处可以实现自定义函数自动提示*@
<script src="~/Scripts/CommonUtil.js"></script>
<div class="portlet box green-meadow col-md-2">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-filter"></i>业务分类
        </div>
    </div>
    <div class="portlet-body flip-scroll">
        <div class="row" style="padding-left:10px">
            <div id="jstree_div"></div>
        </div>
    </div>
</div>

<div class="portlet box col-md-10">
    <!-- BEGIN 数据查询-->
    <div class="portlet box green-meadow">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-filter"></i>
                查询内容
            </div>
            <div class="tools">
                <button type="button" class="btn btn-circle btn-sm green-meadow" onclick="Refresh()">
                    <i class="fa fa-search"></i>
                    查 询
                </button>
                <button type="button" class="btn btn-circle btn-sm green-meadow" onclick="ShowImport()">
                    <i class="fa fa-file-excel-o"></i>
                    导 入
                </button>
                <button type="button" class="btn btn-circle btn-sm green-meadow" onclick="ShowExport()">
                    <i class="fa fa-file-excel-o"></i>
                    导 出
                </button>
                <a href="javascript:;" class="collapse" title="折叠内容"></a>
            </div>
        </div>

        <div class="portlet-body flip-scroll">
            <div class="row">
                <form class="form-horizontal" id="ffSearch">
                    <div class="col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">表单名称</label>
                            <div class="col-md-8">
                                <input id="WHC_FormName" name="WHC_FormName" type="text" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">草稿标题</label>
                            <div class="col-md-8">
                                <input id="WHC_Title" name="WHC_Title" type="text" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-6">
                        <div class="input-daterange input-group">
                            <input id="WHC_CreateTime" name="WHC_CreateTime" placeholder="创建时间(起)" class="form-control" />
                            <span class="input-group-addon">~</span>
                            <input id="WHC_CreateTime2" name="WHC_CreateTime" placeholder="创建时间(止)" class="form-control" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!-- END 数据查询-->
    <!-- BEGIN 表格数据-->
    <div class="portlet box green-meadow">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-cogs"></i>
                数据列表
            </div>
            <div class="tools">
                <button type="button" onclick="EditView()" class="btn btn-circle btn-sm green-meadow">
                    <i class="fa fa-pencil"></i>
                    修改
                </button>
                <button type="button" onclick="Delete()" class="btn btn-circle btn-sm green-meadow">
                    <i class="fa fa-minus"></i>
                    删除
                </button>
                <button type="button" onclick="Refresh()" class="btn btn-circle btn-sm green-meadow" data-toggle="modal">
                    <i class="fa fa-refresh"></i>
                    刷新
                </button>
                <button type="button" class="fullscreen btn btn-circle btn-sm green-meadow" data-original-title="全屏">
                    <i class="icon-size-fullscreen"></i>
                </button>
            </div>
        </div>
        <div class="portlet-body flip-scroll">
            <div class="portlet-body">
                <div>
                    <table id="grid" class="table table-hover"></table>
                </div>
            </div>
        </div>
    </div>

</div>

<!--------------------------添加/修改信息的弹出层---------------------------->
<div id="add" class="modal fade bs-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">
                    <i class="icon-pencil"></i>
                    <span id="lblAddTitle" style="font-weight:bold">添加信息</span>
                </h4>
            </div>
            <form class="form-horizontal form-bordered form-row-strippe" id="ffAdd" action="" data-toggle="validator" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">表单ID</label>
                                <div class="col-md-8">
                                    <input id="Form_ID" name="Form_ID" type="text" class="form-control" placeholder="表单ID..." />

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">表单分类</label>
                                <div class="col-md-8">
                                    <input id="Category" name="Category" type="text" class="form-control" placeholder="表单分类..." />

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">表单名称</label>
                                <div class="col-md-8">
                                    <input id="FormName" name="FormName" type="text" class="form-control" placeholder="表单名称..." />

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">草稿标题</label>
                                <div class="col-md-8">
                                    <input id="Title" name="Title" type="text" class="form-control" placeholder="草稿标题..." />

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">申请单草稿(JSON格式)</label>
                                <div class="col-md-8">
                                    <textarea id="ApplyDraftJson" name="ApplyDraftJson" class="form-control" placeholder="申请单草稿(JSON格式)..."></textarea>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">业务表单草稿(JSON格式)</label>
                                <div class="col-md-8">
                                    <textarea id="BizDraftJson" name="BizDraftJson" class="form-control" placeholder="业务表单草稿(JSON格式)..."></textarea>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">业务明细表单草稿(JSON格式)</label>
                                <div class="col-md-8">
                                    <textarea id="BizDraftJson2" name="BizDraftJson2" class="form-control" placeholder="业务明细表单草稿(JSON格式)..."></textarea>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">业务明细表单草稿(JSON格式)</label>
                                <div class="col-md-8">
                                    <textarea id="BizDraftJson3" name="BizDraftJson3" class="form-control" placeholder="业务明细表单草稿(JSON格式)..."></textarea>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">业务明细表单草稿(JSON格式)</label>
                                <div class="col-md-8">
                                    <textarea id="BizDraftJson4" name="BizDraftJson4" class="form-control" placeholder="业务明细表单草稿(JSON格式)..."></textarea>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer bg-info">
                    <input type="hidden" id="Id" name="Id" />
                    <button type="submit" class="btn blue">确定</button>
                    <button type="button" class="btn green" data-dismiss="modal">取消</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!--导入数据操作层-->
<div id="import" class="modal fade bs-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">文件导入</h4>
            </div>
            <div class="modal-body">
                <div style="text-align:right;padding:5px">
                    <a href="~/Content/Template/ApplyDraft-模板.xls" onclick="javascript:Preview();">
                        <img alt="文件导入-模板" src="~/Content/images/ico_excel.png" />
                        <span style="font-size:larger;font-weight:200;color:red">ApplyDraft-模板.xls</span>
                    </a>
                </div>
                <hr />
                <form id="ffImport" method="post">
                    <div title="Excel导入操作" style="padding: 5px">
                        <input type="hidden" id="AttachGUID" name="AttachGUID" />
                        <input id="excelFile" type="file">
                    </div>
                </form>

                <!--数据显示表格-->
                <table id="gridImport" class="table table-striped table-bordered table-hover" cellpadding="0" cellspacing="0" border="0"></table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                <button type="button" class="btn btn-primary" onclick="SaveImport()">保存</button>
            </div>
        </div>
    </div>
</div>


@section footerScript {

    <script type="text/javascript">
        var currentPage = 1, rows = 10; //分页参数：当前页，记录数

        var isAddOrEdit = 'add';//标识是新增还是编辑对话框弹出，用于删除附件的操作
        var url;//新增或者更新的连接
        var ID;//ID值，新增为空，编辑或者查看为具体ID

        //页面初始化
        $(function () {
            initJsTree();
            InitStyle();        //设置控件的样式
            BindEvent();        //绑定事件处理
            InitDictItem();     //初始化字典信息
            Search(currentPage);//初始化Table
        });

        //绑定左侧树形列表
        //如果update为True，则重新更新缓存
        function initJsTree(update) {
            var baseUrl = "/Form/GetJsTreeJson?r=" + Math.random();
            var url = update ? baseUrl + "&update=true" : baseUrl;
            bindJsTree("jstree_div", url);
            $("#jstree_div").bind("dblclick.jstree", function (e, data) {
                //var id = $(e.target).parents('li').attr('id');
                //EditType();
            });
            //树控件的变化事件处理
            $('#jstree_div').on("changed.jstree", function (e, data) {
                var icon = data.node.icon;
                loadData(data.selected);
            });
        }

        //加载指定的对象数据
        var clickId = "";
        var where = {};//树列表条件
        function loadData(id) {
            var filter = id + ' AND Creator=@Session["UserID"]';//使用自定义条件
            var condition = { CustomedCondition: filter};

            where = {};//清空
            where["CustomedCondition"] = filter;
            //修改条件后需要重新刷新
            $table.bootstrapTable('refresh', { url: queryUrl, query: condition, pageNumber: 1 });
            clickId = id;
        }

        //设置控件的样式
        function InitStyle() {

            //统一设置icheck控件的样式
            $('input[class=icheck]').iCheck({
                checkboxClass: 'icheckbox_square-red',
                radioClass: 'iradio_square-red',
            });
            $('.input-daterange input').each(function () {
                $(this).datepicker({
                    language: 'zh-CN', //语言
                    autoclose: true, //选择后自动关闭
                    clearBtn: true,//清除按钮
                    format: "yyyy-mm-dd"//日期格式
                });
            });

            //增加数值的调整按钮样式
            // $("#Age").TouchSpin({
            //     buttondown_class: 'btn blue',
            //     buttonup_class: 'btn blue',
            //     min: 0,
            //     max: 120,
            //     stepinterval: 1,
            //     maxboostedstep: 10,
            //     prefix: ''
            // });

            //初始化fileinput控件（第一次初始化）
            //initFileInput("file-Portrait", "/ApplyDraft/EditPortrait");
        }

        var $table;
		var queryUrl;
        //初始化bootstrap-table的内容
        function Search (page) {
            //记录页面bootstrap-table全局变量$table，方便应用
            queryUrl = '/ApplyDraft/FindWithPager?rnd=' + Math.random()
            $table = $('#grid').bootstrapTable({
                url: queryUrl,                   	//请求后台的URL（*）
                method: 'GET',                      //请求方式（*）
                //toolbar: '#toolbar',              //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "asc",                   //排序方式
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: page,                      //初始化加载第一页，默认第一页,并记录
                pageSize: rows,                     //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: false,                      //是否显示表格搜索
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列（选择显示的列）
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                //height: 500,                      //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: "ID",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                  //是否显示父子表
                //得到查询的参数
                queryParams : function (params) {
                    //这里的键的名字和控制器的变量名必须一致，这边改动，控制器也需要改成一样的

                    //var temp = {
                    //    rows: params.limit,                         //页面大小
                    //    page: (params.offset / params.limit) + 1,   //页码
                    //    sort: params.sort,      //排序列名
                    //    sortOrder: params.order //排位命令（desc，asc）
                    //};
                    //return temp;

                    var temp = $("#ffSearch").serializeJsonObject();
                    temp["rows"] = params.limit;                        //页面大小
                    temp["page"] = (params.offset / params.limit) + 1;  //页码
                    temp["sort"] = params.sort;                         //排序列名
                    temp["sortOrder"] = params.order;                   //排位命令（desc，asc）

                    //如果自定义条件费用，加入条件
                    $.each(where, function (item) {
                        console.log(item, where[item]);
                        temp[item] = where[item];
                    });

                    //特殊格式的条件处理
                    temp["WHC_Creator"] = "@Session["UserID"]";
                    temp["WHC_CreateTime"] = $("#WHC_CreateTime").val() + "~" + $("#WHC_CreateTime2").val();

                    return temp;
                },
                columns: [{
                    checkbox: true,
                    visible: true                  //是否显示复选框
                },
                    { title: '表单ID', field: 'Form_ID', visible: false /*, width: 80, sortable: true */ },
                    { title: '表单', field: 'FormName' , width: 100, sortable: true  },
                    { title: '草稿标题', field: 'Title' , /*width: 180,*/ sortable: true },
                    { title: '创建人', field: 'Creator', width: 80, sortable: true },
                    { title: '创建时间', field: 'CreateTime', width: 180, sortable: true },
                    { title: '操作', field:'ID', width: 90, align: 'center', valign: 'middle', formatter: actionFormatter},
				],
                onLoadSuccess: function () {
                    currentPage = page;//存储当前页码
                },
                onLoadError: function () {
                    showTips("数据加载失败！");
                },
                onDblClickRow: function (row, $element) {
                    var id = row.ID;
                    var formId = row.Form_ID;
                    EditViewById(id, formId);
                },
            });
        };

        //根据条件查询并绑定结果
        var $import;
        function InitImport(guid) {
            var url = "/ApplyDraft/GetExcelData?guid=" + guid;
            $import = $('#gridImport').bootstrapTable({
                url: url,                           //请求后台的URL（*）
                method: 'GET',                      //请求方式（*）
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: false,                  //是否显示分页（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                      //初始化加载第一页，默认第一页,并记录
                pageSize: 100,                     //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: false,                      //是否显示表格搜索
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列（选择显示的列）
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,               //是否启用点击选中行
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                queryParams: function (params) { },
                columns: [{
                    checkbox: true,
                    visible: true                  //是否显示复选框
                },
                 { title: '表单ID', field: 'Form_ID' /*, width: 80, sortable: true */},
                 { title: '表单分类', field: 'Category' /*, width: 80, sortable: true */},
                 { title: '表单名称', field: 'FormName' /*, width: 80, sortable: true */},
                 { title: '草稿标题', field: 'Title' /*, width: 80, sortable: true */},
    				],
                onLoadSuccess: function () {
                },
                onLoadError: function () {
                    showTips("数据加载失败！");
                },
            });
        }

        //图片格式化
        function imageFormatter(value, row, index) {
            return "<img src='" + value + "' style='width:50px; height:50px;' />";
        }
        //日期字段格式化
        function dateFormatter(value, row, index) {
            return getDateStr(value);
        }
        //连接字段格式化
        function linkFormatter(value, row, index) {
            return "<a href='" + value + "' title='单击打开连接' target='_blank'>" + value + "</a>";
        }
        //Email字段格式化
        function emailFormatter(value, row, index) {
            return "<a href='mailto:" + value + "' title='单击打开连接'>" + value + "</a>";
        }
        //性别字段格式化
        function sexFormatter(value) {
            if (value == "女") { color = 'Red'; }
            else if (value == "男") { color = 'Green'; }
            else { color = 'Yellow'; }

            return '<div  style="color: ' + color + '">' + value + '</div>';
        }
        //操作栏的格式化
        function actionFormatter(value, row, index) {
            var id = value;
            var formId = row.Form_ID;
            var result = "";
            result += "<a href='javascript:;' class='btn btn-xs blue' onclick=\"EditViewById('" + id + "', '" + formId + "')\" title='编辑'><span class='glyphicon glyphicon-pencil'></span></a>";
            result += "<a href='javascript:;' class='btn btn-xs red' onclick=\"DeleteByIds('" + id + "')\" title='删除'><span class='glyphicon glyphicon-remove'></span></a>";

            return result;
        }

        //自定义函数处理queryParams的批量增加
        $.fn.serializeJsonObject = function () {
            var json = {};
            var form = this.serializeArray();
            $.each(form, function () {
                if (json[this.name]) {
                    if (!json[this.name].push) {
                        json[this.name] = [json[this.name]];
                    }
                    json[this.name].push();
                } else {
                    json[this.name] = this.value || '';
                }
            });
            return json;
        }

        //刷新列表
        function Refresh() {
            //Search(currentPage);
            where = {};//置空树形条件，使用查询框条件
            $table.bootstrapTable('refresh');
        }

        //初始化字典信息（下拉列表）
        function InitDictItem() {
            //部分赋值参考

            //绑定字典
            //BindDictItem("Rank", "职务");
            //绑定树列表
            //BindSelect("PID", "/Menu/GetDictJson");

            //绑定可选多个Tag
            // $("#Hobby").val({
            //     tags: ["旅游", "爬山", "篮球", "足球", "乒乓球"]
            // }).trigger("change");

            //绑定添加界面的公司、部门（联动处理）
            // BindSelect("Company_ID", "/User/GetMyCompanyDictJson?userId="+@Session["UserId"]);
            // $("#Company_ID").on("change", function (e) {
            //     var companyid = $("#Company_ID").val();
            //     BindSelect("Dept_ID", "/User/GetDeptDictJson?parentId="+ companyid);
            // });
        }

        //实现删除数据的方法
        function Delete() {
            var ids = "";//得到用户选择的数据的ID
            var rows = $table.bootstrapTable('getSelections');
            for (var i = 0; i < rows.length; i++) {
                ids += rows[i].ID + ',';
            }
            ids = ids.substring(0, ids.length - 1);

            DeleteByIds(ids);
        }

        //删除指定的记录
        function DeleteByIds(ids) {
            if (ids != "") {
                showDelete(function () {
                    //最后去掉最后的逗号,
                    ids = ids.replace(/,\s*$/, '');

                    //然后发送异步请求的信息到后台删除数据
                    var postData = { ids: ids };
                    $.post("/ApplyDraft/DeletebyIds", postData, function (json) {
                        var data = $.parseJSON(json);
                        if (data.Success) {
                            showTips("删除选定的记录成功");
                            Refresh();//刷新页面数据
                        }
                        else {
                            showTips(data.ErrorMessage);
                        }
                    });
                });
            } else {
                showTips("请选择你要删除的数据");
            }
        }

        //弹出新增对话框
        function Add() {
            isAddOrEdit = 'add';//新增对话框标识
            //CKEDITOR.instances.Content.setData('');  //清空编辑器的数据
            $("#ffAdd")[0].reset();//清空上次输入
            $('#ffAdd').validate().resetForm();//去除验证信息

            //增加记录前，赋值ID
            url = '/ApplyDraft/Insert';
            $.get("/ApplyDraft/NewGuid?r=" + Math.random(), function (result) {
                $("#Id").val(result);
                ID = result;
            });

            //初始化部分控件
            //$('input[name="Gender"][value="男"]').iCheck('check');
            //$("#PID").val("").trigger("change");
            //$("#Hobby").val(null).trigger("change");//清空下拉框

            $("#lblAddTitle").text("添加信息");
            $("#add").modal("show");
        }

        //修改或查看明细信息（绑定显示数据）
        function EditView(view) {
            ID = "";//重置ID的值
            var formId = "";
            var rows = $table.bootstrapTable('getSelections');
            if (rows.length > 0) {
                ID = rows[0].ID;
                formId = rows[0].Form_ID;
            }

            EditViewById(ID, formId);
        }

        //编辑或者查看指定记录
        function EditViewById(ID, formId) {
            if (ID == "") {
                showTips("请选择一条记录");
                return;
            }

            if (formId != '') {
                $.getJSON("/Form/FindByID?id=" + formId, function (formInfo) {
                    var createUrl = formInfo.ApplyUrl;
                    if (createUrl != '') {
                        window.location.href = createUrl + "?draftid=" + ID + "&formid=" + formId;
                    } else {
                        showTips("表单没有启用");
                    }
                });
            } else {
                showTips("表单ID为空");
            }
        }

        //绑定编辑详细信息的方法
        function BindEditInfo(ID) {
            //使用同步方式，使得联动的控件正常显示
            $.ajaxSettings.async = false;

            $('#ffAdd').validate().resetForm();//去除验证信息

            //首先用户发送一个异步请求去后台实现方法
            $.getJSON("/ApplyDraft/FindByID?r=" + Math.random() + "&id=" + ID, function (info) {
                 $("#Form_ID").val(info.Form_ID);
                 $("#Category").val(info.Category);
                 $("#FormName").val(info.FormName);
                 $("#Title").val(info.Title);

                //参考赋值
                //$("#Company_ID1").val(info.Company_ID).trigger("change");//联动
                //$("#PID1").val(info.PID).trigger("change");//普通Select2
                // var array = [info.Hobby];
                // $("#Hobby").val(array).trigger("change"); //集合

                // $("input[name='Gender']").iCheck('uncheck');
                // $("input[name='Gender'][value='" + info.Gender + "']").iCheck('check');
                // $("#BirthDate").val(getDateStr(info.BirthDate));

                $("#Id").val(info.ID);
                isAddOrEdit = 'edit';//新增对话框标识
            });

    }

        //显示导入界面
        function ShowImport() {
            $("#import").modal("show");
        }

        //导出Excel数据
        function ShowExport() {
            var url = "/ApplyDraft/Export";
            var condition = $("#ffSearch").serialize();//获取条件

            executeExport(url, condition);//执行导出
        }

        //绑定相关事件
        function BindEvent() {
            //判断表单的信息是否通过验证
            $("#ffAdd").validate({
                meta: "validate",
                errorElement: 'span',
                errorClass: 'help-block help-block-error',
                focusInvalid: false,
                highlight: function (element) {
                    $(element).closest('.form-group').addClass('has-error');
                },
                success: function (label) {
                    label.closest('.form-group').removeClass('has-error');
                    label.remove();
                },
                errorPlacement: function (error, element) {
                    element.parent('div').append(error);
                },
                submitHandler: function (form) {
	                $("#add").modal("hide");
	                //构造参数发送给后台
	                var postData = $("#ffAdd").serializeArray();
	                $.post(url, postData, function (json) {
	                    var data = $.parseJSON(json);
	                    if (data.Success) {
	                        //可增加其他处理

	                        //保存成功  1.关闭弹出层，2.刷新表格数据
	                        showTips("保存成功");
	                        Refresh();
	                    }
	                    else {
	                        showError("保存失败:" + data.ErrorMessage, 3000);
	                    }
	                }).error(function () {
	                    showTips("您未被授权使用该功能，请联系管理员进行处理。");
	                });
                }
            });

            //回车进行查询
            if (document.addEventListener) {
                //如果是Firefox
                document.getElementById("ffSearch").addEventListener("keypress", enterEvent, true);
            } else {
                //如果是IE
                document.getElementById("ffSearch").attachEvent("onkeypress", enterEvent);
            }
        }
        //按下Enter搜索
        function enterEvent(evt) {
            if (evt.keyCode == 13) {
                //$("#btnSearch").click();
                Refresh();        
                evt.preventDefault();  //阻止事件冒泡
            }
        }

    </script>

    <!--添加对 fileinput 控件的支持-->
    <script type="text/javascript">
        $(function () {
            InitExcelFile();
        });

        //初始化Excel导入的文件
        function InitExcelFile() {
            //记录GUID
            $("#AttachGUID").val(newGuid());

            $("#excelFile").fileinput({
                uploadUrl: "/FileUpload/Upload",//上传的地址
                uploadAsync: true,              //异步上传
                language: "zh",                 //设置语言
                showCaption: true,              //是否显示标题
                showUpload: true,               //是否显示上传按钮
                showRemove: true,               //是否显示移除按钮
                showPreview: true,             //是否显示预览按钮
                browseClass: "btn btn-primary", //按钮样式
                dropZoneEnabled: false,         //是否显示拖拽区域
                allowedFileExtensions: ["xls", "xlsx"], //接收的文件后缀
                maxFileCount: 1,                        //最大上传文件数限制
                previewFileIcon: '<i class="glyphicon glyphicon-file"></i>',
                allowedPreviewTypes: null,
                previewFileIconSettings: {
                    'docx': '<i class="glyphicon glyphicon-file"></i>',
                    'xlsx': '<i class="glyphicon glyphicon-file"></i>',
                    'pptx': '<i class="glyphicon glyphicon-file"></i>',
                    'jpg': '<i class="glyphicon glyphicon-picture"></i>',
                    'pdf': '<i class="glyphicon glyphicon-file"></i>',
                    'zip': '<i class="glyphicon glyphicon-file"></i>',
                },
                uploadExtraData: {  //上传的时候，增加的附加参数
                    folder: '数据导入文件', guid: $("#AttachGUID").val()
                }
            })  //文件上传完成后的事件
                .on('fileuploaded', function (event, data, previewId, index) {
                    var form = data.form, files = data.files, extra = data.extra,
                        response = data.response, reader = data.reader;

                    var res = data.response; //返回结果
                    if (res.Success) {
                        showTips('上传成功');
                        var guid = $("#AttachGUID").val();

                        //提示用户Excel格式是否正常，如果正常加载数据
                        $.ajax({
                            url: '/ApplyDraft/CheckExcelColumns?guid=' + guid,
                            type: 'get',
                            dataType: 'json',
                            success: function (data) {
                                if (data.Success) {
                                    InitImport(guid); //重新刷新表格数据
                                    showToast("文件已上传，数据加载完毕！");

                                    //重新刷新GUID，以及清空文件，方便下一次处理
                                    RefreshExcel();
                                }
                                else {
                                    showToast("上传的Excel文件检查不通过。请根据页面右上角的Excel模板格式进行数据录入。", "error");
                                }
                            }
                        });
                    }
                    else {
                        showTips('上传失败');
                    }
                });
        }
        //重新更新GUID的值，并清空文件
        function RefreshExcel() {
            $("#AttachGUID").val(newGuid());
            $('#excelFile').fileinput('clear');//清空所有文件

            //附加参数初始化后一直不会变化，如果需要发生变化，则需要使用refresh进行更新
            $('#excelFile').fileinput('refresh', {
                uploadExtraData: { folder: '数据导入文件', guid: $("#AttachGUID").val() },
            });
        }

        //保存导入的数据
        function SaveImport() {

            var list = [];//构造集合对象
            var rows = $import.bootstrapTable('getSelections');
            for (var i = 0; i < rows.length; i++) {
                list.push({
                    'Form_ID': rows[i].Form_ID, 'Category': rows[i].Category, 'FormName': rows[i].FormName, 'Title': rows[i].Title, 'ApplyDraftJson': rows[i].ApplyDraftJson, 'BizDraftJson': rows[i].BizDraftJson, 'BizDraftJson2': rows[i].BizDraftJson2, 'BizDraftJson3': rows[i].BizDraftJson3, 'BizDraftJson4': rows[i].BizDraftJson4
                });
            }

            if (list.length == 0) {
                showToast("请选择一条记录", "warning");
                return;
            }

            var postData = { 'list': list };//可以增加其他参数，如{ 'list': list, 'Rucanghao': $("#Rucanghao").val() };
            postData = JSON.stringify(postData);

            $.ajax({
                url: '/ApplyDraft/SaveExcelData',
                type: 'post',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                traditional: true,
                success: function (data) {
                    if (data.Success) {
                        //保存成功  1.关闭弹出层，2.清空记录显示 3.刷新主列表
                        showToast("保存成功");

                        $("#import").modal("hide");
                        $(bodyTag).html("");
                        Refresh();
                    }
                    else {
                        showToast("保存失败:" + data.ErrorMessage, "error");
                    }
                },
                data: postData
            });
        }
    </script>

}
