@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "我的审批工作";
}

@*脚本引用放在此处可以实现自定义函数自动提示*@
<script src="~/Scripts/CommonUtil.js"></script>

<div class="portlet box green-meadow col-md-2">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-filter"></i>审批工作分类
        </div>
    </div>
    <div class="portlet-body flip-scroll">
        <div class="row" style="padding-left:10px">
            <div id="jstree_div"></div>
        </div>
    </div>
</div>

<div class="portlet box col-md-10">
    <!-- BEGIN 数据查询-->
    <div class="portlet box green-meadow">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-filter"></i>
                查询内容
            </div>
            <div class="tools">
                <button type="button" class="btn btn-circle btn-sm green-meadow" onclick="Refresh()">
                    <i class="fa fa-search"></i>
                    查 询
                </button>
                <button type="button" class="btn btn-circle btn-sm green-meadow" onclick="ShowExport()">
                    <i class="fa fa-file-excel-o"></i>
                    导 出
                </button>
                <a href="javascript:;" class="collapse" title="折叠内容"></a>
            </div>
        </div>

        <div class="portlet-body flip-scroll">
            <div class="row">
                <form class="form-horizontal" id="ffSearch">
                    <div class="col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">表单分类</label>
                            <div class="col-md-8">
                                <select id="WHC_Category" name="WHC_Category" type="text" class="form-control"></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">表单类型</label>
                            <div class="col-md-8">
                                <select id="WHC_FormId" name="WHC_Form_ID" type="text" class="form-control"></select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label class="control-label col-md-4">申请单标题</label>
                            <div class="col-md-8">
                                <input id="WHC_Title" name="WHC_Title" type="text" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-6">
                        <div class="input-daterange input-group">
                            <input id="WHC_Edittime" name="WHC_Edittime" placeholder="创建日期(起)" class="form-control" />
                            <span class="input-group-addon">~</span>
                            <input id="WHC_Edittime2" name="WHC_Edittime" placeholder="创建日期(止)" class="form-control" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!-- END 数据查询-->
    <!-- BEGIN 表格数据-->
    <div class="portlet box green-meadow">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-cogs"></i>
                数据列表
            </div>
            <div class="tools">
                <button type="button" onclick="EditView('view')" class="btn btn-circle btn-sm green-meadow">
                    <i class="fa fa-table"></i>
                    查看
                </button>
                <button type="button" onclick="Refresh()" class="btn btn-circle btn-sm green-meadow" data-toggle="modal">
                    <i class="fa fa-refresh"></i>
                    刷新
                </button>
                <button type="button" class="fullscreen btn btn-circle btn-sm green-meadow" data-original-title="全屏">
                    <i class="icon-size-fullscreen"></i>
                </button>
            </div>
        </div>
        <div class="portlet-body flip-scroll">
            <div class="portlet-body">
                <div>
                    <table id="grid" class="table table-hover"></table>
                </div>
            </div>
        </div>
    </div>
</div>

    @section footerScript {

        <script type="text/javascript">
        var currentPage = 1, rows = 10; //分页参数：当前页，记录数

        var isAddOrEdit = 'add';//标识是新增还是编辑对话框弹出，用于删除附件的操作
        var url;//新增或者更新的连接
        var ID;//ID值，新增为空，编辑或者查看为具体ID

        //页面初始化
        $(function () {
            initJsTree(); //初始化树
            InitStyle();        //设置控件的样式
            BindEvent();        //绑定事件处理
            InitDictItem();     //初始化字典信息
            Search(currentPage);//初始化Table
        });

       //绑定左侧树形列表
        //如果update为True，则重新更新缓存
        function initJsTree(update) {
            var baseUrl = "/Apply/GetMyApplyJson?r=" + Math.random();
            var url = update ? baseUrl + "&update=true" : baseUrl;
            bindJsTree("jstree_div", url);
            $("#jstree_div").bind("dblclick.jstree", function (e, data) {
                //var id = $(e.target).parents('li').attr('id');
                //EditType();
            });
            //树控件的变化事件处理
            $('#jstree_div').on("changed.jstree", function (e, data) {
                var icon = data.node.icon;
                loadData(data.selected);
            });
        }

        //加载指定的对象数据
        var clickId = "";
        var where = {CustomedCondition:"add:"};//树列表条件
        function loadData(id) {
            var condition = { CustomedCondition: id + '' };
            where = {};//清空
            where["CustomedCondition"] = id + '';//使用自定义条件

            //修改条件后需要重新刷新
            $table.bootstrapTable('refresh', { url: queryUrl, query: condition, pageNumber:1});
            clickId = id;
        }

        //设置控件的样式
        function InitStyle() {

            //统一设置icheck控件的样式
            $('input[class=icheck]').iCheck({
                checkboxClass: 'icheckbox_square-red',
                radioClass: 'iradio_square-red',
            });
            $('.input-daterange input').each(function () {
                $(this).datepicker({
                    language: 'zh-CN', //语言
                    autoclose: true, //选择后自动关闭
                    clearBtn: true,//清除按钮
                    format: "yyyy-mm-dd"//日期格式
                });
            });
        }

        var $table;
		var queryUrl;
        //初始化bootstrap-table的内容
        function Search (page) {
            //记录页面bootstrap-table全局变量$table，方便应用
            queryUrl = '/Apply/FindApplyByTag?rnd=' + Math.random()
            $table = $('#grid').bootstrapTable({
                url: queryUrl,                   	//请求后台的URL（*）
                method: 'GET',                      //请求方式（*）
                //toolbar: '#toolbar',              //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "asc",                   //排序方式
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: page,                      //初始化加载第一页，默认第一页,并记录
                pageSize: rows,                     //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: false,                      //是否显示表格搜索
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列（选择显示的列）
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                //height: 500,                      //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: "ID",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                  //是否显示父子表
                //得到查询的参数
                queryParams : function (params) {
                    //这里的键的名字和控制器的变量名必须一致，这边改动，控制器也需要改成一样的

                    //var temp = {
                    //    rows: params.limit,                         //页面大小
                    //    page: (params.offset / params.limit) + 1,   //页码
                    //    sort: params.sort,      //排序列名
                    //    sortOrder: params.order //排位命令（desc，asc）
                    //};
                    //return temp;

                    var temp = $("#ffSearch").serializeJsonObject();
                    temp["rows"] = params.limit;                        //页面大小
                    temp["page"] = (params.offset / params.limit) + 1;  //页码
                    temp["sort"] = params.sort;                         //排序列名
                    temp["sortOrder"] = params.order;                   //排位命令（desc，asc）

                    //如果自定义条件非空，加入条件
                    $.each(where, function (item) {
                        //console.log(item, where[item]);
                        temp[item] = where[item];
                    });

                    //特殊格式的条件处理
                    //temp["WHC_Age"] = $("#WHC_Age").val() + "~" + $("#WHC_Age2").val();
                    temp["WHC_Edittime"] = $("#WHC_Edittime").val() + "~" + $("#WHC_Edittime2").val();

                    return temp;
                },
                columns: [{
                    checkbox: true,
                    visible: true                  //是否显示复选框
                },
                 { title: '表单类型', field: 'Form_Id' , width: 80, sortable: true },
                 { title: '表单分类', field: 'Category' , width: 80, sortable: true },
                 { title: '申请单标题', field: 'Title', width: 250, sortable: true },
                 { title: '当前状态', field: 'Status', width: 80, sortable: true, formatter: statusFormatter },
                 { title: '当前处理类型', field: 'Proc_Type', width: 60, sortable: true },
                 { title: '当前处理人', field: 'Proc_User', width: 60, sortable: true  },
                 //{ title: '备注信息', field: 'Remark', width: 80, sortable: true },
                    { title: '创建者', field: 'Editor', width: 80, sortable: true },
                    { title: '创建日期', field: 'Edittime', width: 150, sortable: true/*, formatter: dateFormatter*/ },
  				 { title: '操作', field:'ID', width: 80, align: 'center', valign: 'middle', formatter: actionFormatter},
				],
                onLoadSuccess: function () {
                    currentPage = page;//存储当前页码
                },
                onLoadError: function () {
                    showTips("数据加载失败！");
                },
                onDblClickRow: function (row, $element) {
                    var id = row.ID;
                    EditViewById(id, 'view');
                }
            });
        };

        //根据条件查询并绑定结果
        var $import;
        function InitImport(guid) {
            var url = "/Apply/GetExcelData?guid=" + guid;
            $import = $('#gridImport').bootstrapTable({
                url: url,                           //请求后台的URL（*）
                method: 'GET',                      //请求方式（*）
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: false,                  //是否显示分页（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                      //初始化加载第一页，默认第一页,并记录
                pageSize: 100,                     //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: false,                      //是否显示表格搜索
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列（选择显示的列）
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,               //是否启用点击选中行
                uniqueId: "ID",                     //每一行的唯一标识，一般为主键列
                queryParams: function (params) { },
                columns: [{
                    checkbox: true,
                    visible: true                  //是否显示复选框
                },
                 { title: '表单类型', field: 'Form_Id' , width: 80, sortable: true },
                 { title: '表单分类', field: 'Category' , width: 80, sortable: true },
                 { title: '申请单标题', field: 'Title', width: 250, sortable: true },
                 { title: '当前状态', field: 'Status' , width: 80, sortable: true },
                 { title: '当前处理类型', field: 'Proc_Type', width: 80, sortable: true },
                 { title: '当前处理人', field: 'Proc_User', width: 80, sortable: true  },
                 { title: '备注信息', field: 'Remark', width: 80, sortable: true },
                 { title: '创建者', field: 'Editor' , width: 80, sortable: true },
                 { title: '创建日期', field: 'Edittime' , width: 150, sortable: true  },
  				],
                onLoadSuccess: function () {
                },
                onLoadError: function () {
                    showTips("数据加载失败！");
                },
            });
        }

        //图片格式化
        function imageFormatter(value, row, index) {
            return "<img src='" + value + "' style='width:50px; height:50px;' />";
        }
        //日期字段格式化
        function dateFormatter(value, row, index) {
            return getDateStr(value);
        }
        //连接字段格式化
        function linkFormatter(value, row, index) {
            return "<a href='" + value + "' title='单击打开连接' target='_blank'>" + value + "</a>";
        }
        //Email字段格式化
        function emailFormatter(value, row, index) {
            return "<a href='mailto:" + value + "' title='单击打开连接'>" + value + "</a>";
        }
        //性别字段格式化
        function sexFormatter(value) {
            if (value == "女") { color = 'Red'; }
            else if (value == "男") { color = 'Green'; }
            else { color = 'Yellow'; }

            return '<div  style="color: ' + color + '">' + value + '</div>';
        }
        //操作栏的格式化
        function actionFormatter(value, row, index) {
            var id = value;
            var result = "";
            result += "<a href='javascript:;' class='btn btn-xs green' onclick=\"EditViewById('" + id + "', view='view')\" title='查看'><span class='glyphicon glyphicon-search'></span></a>";
            //result += "<a href='javascript:;' class='btn btn-xs red' onclick=\"DeleteByIds('" + id + "')\" title='删除'><span class='glyphicon glyphicon-remove'></span></a>";

            return result;
        }
        //状态格式化
        function statusFormatter(value, row, index) {
            var result = "";
            if (value == "处理中") {
                result = "<spanc class='label' style='background:#57B756'> " + value + " </span>";
            }
            else if (value == "已完成") {
                result = "<span class='label label-primary'> " + value + " </span>";
            }
            else if (value == "已退回") {
                result = "<span class='label label-warning'> " + value + " </span>";
            }
            else if (value == "已撤消") {
                result = "<span class='label label-danger'> " + value + " </span>";
            }
            return result;
        }

        //自定义函数处理queryParams的批量增加
        $.fn.serializeJsonObject = function () {
            var json = {};
            var form = this.serializeArray();
            $.each(form, function () {
                if (json[this.name]) {
                    if (!json[this.name].push) {
                        json[this.name] = [json[this.name]];
                    }
                    json[this.name].push();
                } else {
                    json[this.name] = this.value || '';
                }
            });
            return json;
        }

        //刷新列表
        function Refresh() {
            //Search(currentPage);
            where = {};
            $table.bootstrapTable('refresh');
        }

        //初始化字典信息（下拉列表）
        function InitDictItem() {
            //部分赋值参考

            //绑定字典
            BindSelect("WHC_Category", "/Form/GetFormCategory", '', function () {
                $("#WHC_Category").val('');
            });

            BindSelect("WHC_FormId", "/Form/GetFormItem", '', function () {
                $("#WHC_FormId").val('');
            });
            BindSelect("Category", "/Form/GetFormCategory");

            //BindDictItem("Rank", "职务");
            //绑定树列表
            //BindSelect("PID", "/Menu/GetDictJson");

            //绑定可选多个Tag
            // $("#Hobby").val({
            //     tags: ["旅游", "爬山", "篮球", "足球", "乒乓球"]
            // }).trigger("change");

            //绑定添加界面的公司、部门（联动处理）
            // BindSelect("Company_ID", "/User/GetMyCompanyDictJson?userId="+@Session["UserId"]);
            // $("#Company_ID").on("change", function (e) {
            //     var companyid = $("#Company_ID").val();
            //     BindSelect("Dept_ID", "/User/GetDeptDictJson?parentId="+ companyid);
            // });
        }

        //实现删除数据的方法
        function Delete() {
            var ids = "";//得到用户选择的数据的ID
            var rows = $table.bootstrapTable('getSelections');
            for (var i = 0; i < rows.length; i++) {
                ids += rows[i].ID + ',';
            }
            ids = ids.substring(0, ids.length - 1);

            DeleteByIds(ids);
        }

        //删除指定的记录
        function DeleteByIds(ids) {
            if (ids != "") {
                showDelete(function () {
                    //最后去掉最后的逗号,
                    ids = ids.replace(/,\s*$/, '');

                    //然后发送异步请求的信息到后台删除数据
                    var postData = { ids: ids };
                    $.post("/Apply/DeletebyIds", postData, function (json) {
                        var data = $.parseJSON(json);
                        if (data.Success) {
                            showTips("删除选定的记录成功");
                            Refresh();//刷新页面数据
                        }
                        else {
                            showTips(data.ErrorMessage);
                        }
                    });
                });
            } else {
                showTips("请选择你要删除的数据");
            }
        }

        //修改或查看明细信息（绑定显示数据）
        function EditView(view) {
            ID = "";//重置ID的值
            var rows = $table.bootstrapTable('getSelections');
            if (rows.length > 0) {
                ID = rows[0].ID;
            }

            EditViewById(ID,  view);
        }

        //编辑或者查看指定记录
        function EditViewById(ID, view) {
            if (ID == "") {
                showTips("请选择一条记录");
                return;
            }

            //获取表单的查看明细URL，然后组合URL跳转到查看
            $.getJSON("/Apply/FindByID?r=" + Math.random() + "&id=" + ID, function (info) {
                var formId = info.FormId;

                $.getJSON("/Form/FindByID?r=" + Math.random() + "&id=" + formId, function (info) {
                    var ApplyUrl2 = info.ApplyUrl2;
                    if (ApplyUrl2 != null && ApplyUrl2 != '') {
                        var viewUrl = ApplyUrl2 + '?id=' + ID;
                        window.location.href = viewUrl;
                    }
                });
            });
        }

        //导出Excel数据
        function ShowExport() {
            var url = "/Apply/Export";
            var condition = $("#ffSearch").serialize();//获取条件

            executeExport(url, condition);//执行导出
        }

        //绑定相关事件
        function BindEvent() {
            //判断表单的信息是否通过验证
            $("#ffAdd").validate({
                meta: "validate",
                errorElement: 'span',
                errorClass: 'help-block help-block-error',
                focusInvalid: false,
                highlight: function (element) {
                    $(element).closest('.form-group').addClass('has-error');
                },
                success: function (label) {
                    label.closest('.form-group').removeClass('has-error');
                    label.remove();
                },
                errorPlacement: function (error, element) {
                    element.parent('div').append(error);
                },
                submitHandler: function (form) {
	                $("#add").modal("hide");
	                //构造参数发送给后台
	                var postData = $("#ffAdd").serializeArray();
	                $.post(url, postData, function (json) {
	                    var data = $.parseJSON(json);
	                    if (data.Success) {
	                        //可增加其他处理

	                        //保存成功  1.关闭弹出层，2.刷新表格数据
	                        showTips("保存成功");
	                        Refresh();
	                    }
	                    else {
	                        showError("保存失败:" + data.ErrorMessage, 3000);
	                    }
	                }).error(function () {
	                    showTips("您未被授权使用该功能，请联系管理员进行处理。");
	                });
                }
            });

            //回车进行查询
            if (document.addEventListener) {
                //如果是Firefox
                document.getElementById("ffSearch").addEventListener("keypress", enterEvent, true);
            } else {
                //如果是IE
                document.getElementById("ffSearch").attachEvent("onkeypress", enterEvent);
            }
        }
        //按下Enter搜索
        function enterEvent(evt) {
            if (evt.keyCode == 13) {
                //$("#btnSearch").click();
                Refresh();        
                evt.preventDefault();  //阻止事件冒泡
            }
        }

        </script>

        <!--添加对 fileinput 控件的支持-->
        <script type="text/javascript">
            $(function () {
                InitExcelFile();
            });

            //初始化Excel导入的文件
            function InitExcelFile() {
                //记录GUID
                $("#AttachGUID").val(newGuid());

                $("#excelFile").fileinput({
                    uploadUrl: "/FileUpload/Upload",//上传的地址
                    uploadAsync: true,              //异步上传
                    language: "zh",                 //设置语言
                    showCaption: true,              //是否显示标题
                    showUpload: true,               //是否显示上传按钮
                    showRemove: true,               //是否显示移除按钮
                    showPreview: true,             //是否显示预览按钮
                    browseClass: "btn btn-primary", //按钮样式
                    dropZoneEnabled: false,         //是否显示拖拽区域
                    allowedFileExtensions: ["xls", "xlsx"], //接收的文件后缀
                    maxFileCount: 1,                        //最大上传文件数限制
                    previewFileIcon: '<i class="glyphicon glyphicon-file"></i>',
                    allowedPreviewTypes: null,
                    previewFileIconSettings: {
                        'docx': '<i class="glyphicon glyphicon-file"></i>',
                        'xlsx': '<i class="glyphicon glyphicon-file"></i>',
                        'pptx': '<i class="glyphicon glyphicon-file"></i>',
                        'jpg': '<i class="glyphicon glyphicon-picture"></i>',
                        'pdf': '<i class="glyphicon glyphicon-file"></i>',
                        'zip': '<i class="glyphicon glyphicon-file"></i>',
                    },
                    uploadExtraData: {  //上传的时候，增加的附加参数
                        folder: '数据导入文件', guid: $("#AttachGUID").val()
                    }
                })  //文件上传完成后的事件
                    .on('fileuploaded', function (event, data, previewId, index) {
                        var form = data.form, files = data.files, extra = data.extra,
                            response = data.response, reader = data.reader;

                        var res = data.response; //返回结果
                        if (res.Success) {
                            showTips('上传成功');
                            var guid = $("#AttachGUID").val();

                            //提示用户Excel格式是否正常，如果正常加载数据
                            $.ajax({
                                url: '/Apply/CheckExcelColumns?guid=' + guid,
                                type: 'get',
                                dataType: 'json',
                                success: function (data) {
                                    if (data.Success) {
                                        InitImport(guid); //重新刷新表格数据
                                        showToast("文件已上传，数据加载完毕！");

                                        //重新刷新GUID，以及清空文件，方便下一次处理
                                        RefreshExcel();
                                    }
                                    else {
                                        showToast("上传的Excel文件检查不通过。请根据页面右上角的Excel模板格式进行数据录入。", "error");
                                    }
                                }
                            });
                        }
                        else {
                            showTips('上传失败');
                        }
                    });
            }
            //重新更新GUID的值，并清空文件
            function RefreshExcel() {
                $("#AttachGUID").val(newGuid());
                $('#excelFile').fileinput('clear');//清空所有文件

                //附加参数初始化后一直不会变化，如果需要发生变化，则需要使用refresh进行更新
                $('#excelFile').fileinput('refresh', {
                    uploadExtraData: { folder: '数据导入文件', guid: $("#AttachGUID").val() },
                });
            }
        </script>

    }
